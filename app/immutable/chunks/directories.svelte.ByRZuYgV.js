import{p as d}from"./if.iSSDrv-K.js";import{G as v,J as S,K as p,L as e,m as c,M as j,N as h,O as k}from"./runtime.A5g2blTK.js";import{g as R,a as N}from"./app.svelte.CDQhUUHo.js";import{g as z}from"./pages.svelte.DTz5NOLm.js";function E(){let s=p(0),u=p(!0),b=d({name:"Home",type:"folder",children:[]}),o=p(d({root:b})),f=p(d(["root"])),i=h(()=>e(o)[e(f)[e(f).length-1]]);R();let D=h(()=>{let t=Object.keys(e(o)).filter(n=>n!=="root"),r=["root"];for(;r.length>0;){let n=r.pop();if(!n||e(o)[n].type!=="folder")continue;let l=e(o)[n];for(let a of l.children)t=t.filter(F=>F!==a),r.push(a)}return t});const w=z();let U=h(()=>{let t=Object.keys(w),r=["root"];for(;r.length>0;){let n=r.pop();if(!n)continue;let l=e(o)[n];if(l.type==="folder")for(let a of l.children)r.push(a);else l.type==="page"&&(t=t.filter(a=>a!==l.pageID))}return t});const y=N();function x(t){let r={lastUpdated:Date.now(),tree:{root:{name:"Home",type:"folder",children:[]}}};const n=Object.hasOwn(t,"lastUpdated")&&typeof t.lastUpdated=="number"&&Object.hasOwn(t,"tree")&&typeof t.tree=="object";return n&&(r.lastUpdated=t.lastUpdated,r.tree=t.tree),{wasValid:n,sanitizedDirectory:r}}function g(){y.publishDoc(["directories","root"],{lastUpdated:e(s),folders:e(o)})}function O(t="New Folder"){if(e(i).type!=="folder")return;const r=crypto.randomUUID().slice(0,8);e(o)[r]={name:t,type:"folder",children:[]},e(i).children.push(r)}function P(t){e(i).type==="folder"&&(e(o)[t]={name:t,type:"page",pageID:t},e(i).children.push(t))}function C(t){e(i).type==="folder"&&(e(i).children=e(i).children.filter(r=>r!==t),delete e(o)[t])}function I(t){e(i).type==="folder"&&(e(i).children=e(i).children.filter(r=>r!==t),delete e(o)[t])}return y.subscribeToCollection(["directories"],(t,r)=>{if(t!=="root"){console.warn("Only root directory is currently supported");return}if(r===null){console.warn("Root directory does not exist! publishing new root"),g();return}let{wasValid:n,sanitizedDirectory:l}=x(r);if(!n){console.warn("Ignoring invalid root directory",r);return}l.lastUpdated<e(s)?g():l.lastUpdated>e(s)?(console.log("root directory updated"),c(u,!0),c(s,d(l.lastUpdated)),c(o,d(l.tree))):l.lastUpdated===e(s)&&console.log("directory synced with firebase",t)}),j(()=>{JSON.stringify(e(o)),k(()=>{if(e(u)){c(u,!1);return}c(s,d(Date.now())),g()})}),{get folders(){return e(o)},get currentPath(){return e(f)},set currentPath(t){c(f,d(t))},get currentFolder(){return e(i)},get addSubfolder(){return O},get removeSubfolder(){return I},get addPageID(){return P},get removePageID(){return C},get orphanedFolders(){return e(D)},get orphanedPages(){return e(U)}}}const m=Symbol("directories"),V=()=>{const s=E();return v(m,s)},Y=()=>S(m);export{Y as g,V as s};
