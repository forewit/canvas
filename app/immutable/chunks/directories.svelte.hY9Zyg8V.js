import{p as a}from"./if.BUEQ1AeY.js";import{i as k,j as v,k as c,l as e,m as f,u as S,n as h,o as R}from"./runtime.DPf4mIKn.js";import{g as z,a as E}from"./app.svelte.DpIlZ-Nj.js";import{g as H}from"./pages.svelte.CDocv9n6.js";function N(){let d=c(0),p=c(!0),D=a({name:"Home",color:"red"}),n=c(a({root:D})),u=c(a(["root"])),o=h(()=>e(n)[e(u)[e(u).length-1]]);const w=z();let U=h(()=>{let t=Object.keys(e(n)).filter(s=>s!=="root"),r=["root"];for(;r.length>0;){let s=r.pop();if(!s)continue;let l=e(n)[s];if(l.subfolders)for(let i of l.subfolders)t=t.filter(b=>b!==i),r.push(i)}return t});const x=H();let P=h(()=>{let t=Object.keys(x),r=["root"];for(;r.length>0;){let s=r.pop();if(!s)continue;let l=e(n)[s];if(l.subfolders)for(let i of l.subfolders)r.push(i);if(l.pages)for(let i of l.pages)t=t.filter(b=>b!==i)}return t});const m=E();function C(t){let r={lastUpdated:Date.now(),folders:{root:{name:"Home",color:"red"}}};const s=Object.hasOwn(t,"lastUpdated")&&typeof t.lastUpdated=="number"&&Object.hasOwn(t,"folders")&&typeof t.folders=="object";return s&&(r.lastUpdated=t.lastUpdated,r.folders=t.folders),{wasValid:s,sanitizedDirectory:r}}function g(){m.publishDoc(["directories","root"],{lastUpdated:e(d),folders:e(n)})}function O(t="New Folder",r=w.theme.theme1){const s=crypto.randomUUID().slice(0,8);e(o).subfolders||(e(o).subfolders=[]),e(n)[s]={name:t,color:r},e(o).subfolders.push(s)}function F(t){e(o).subfolders&&(e(o).subfolders=e(o).subfolders.filter(r=>r!==t),delete e(n)[t],e(o).subfolders.length===0&&delete e(o).subfolders)}function I(t){e(o).pages||(e(o).pages=[]),e(o).pages.push(t)}function j(t){e(o).pages&&(e(o).pages=e(o).pages.filter(r=>r!==t),e(o).pages.length===0&&delete e(o).pages)}return m.subscribeToCollection(["directories"],(t,r)=>{if(t!=="root"){console.warn("Only root directory is currently supported");return}if(r===null){console.warn("Root directory does not exist! publishing new root"),g();return}let{wasValid:s,sanitizedDirectory:l}=C(r);if(!s){console.warn("Ignoring invalid root directory",r);return}l.lastUpdated<e(d)?g():l.lastUpdated>e(d)?(console.log("root directory updated"),f(p,!0),f(d,a(l.lastUpdated)),f(n,a(l.folders))):l.lastUpdated===e(d)&&console.log("directory synced with firebase",t)}),S(()=>{JSON.stringify(e(n)),R(()=>{if(e(p)){f(p,!1);return}f(d,a(Date.now())),g()})}),{get folders(){return e(n)},get currentPath(){return e(u)},set currentPath(t){f(u,a(t))},get currentFolder(){return e(o)},get addSubfolder(){return O},get removeSubfolder(){return F},get addPageID(){return I},get removePageID(){return j},get orphanedFolders(){return e(U)},get orphanedPages(){return e(P)}}}const y=Symbol("directories"),A=()=>{const d=N();return k(y,d)},J=()=>v(y);export{J as g,A as s};
