const s=location.pathname.split("/").slice(0,-1).join("/"),o=[s+"/app/immutable/entry/app.BqzFVvYb.js",s+"/app/immutable/nodes/0.62Ab1tT4.js",s+"/app/immutable/assets/0.DTl7djwE.css",s+"/app/immutable/nodes/1.DPBuWsFL.js",s+"/app/immutable/nodes/2.9eho6CbK.js",s+"/app/immutable/assets/2.Cp12jeBW.css",s+"/app/immutable/nodes/3.2WSR370P.js",s+"/app/immutable/assets/3.BpwHfDRr.css",s+"/app/immutable/nodes/4.BY3yVlXY.js",s+"/app/immutable/assets/ProgressBar.CvJdmZFX.css",s+"/app/immutable/chunks/ProgressBar.BgL6fn2h.js",s+"/app/immutable/chunks/authUtils.CzOb3DZR.js",s+"/app/immutable/chunks/disclose-version.Dwjb0r68.js",s+"/app/immutable/chunks/entry.CDEZsZDx.js",s+"/app/immutable/chunks/events.dPbSfJbf.js",s+"/app/immutable/chunks/firebase.client.Bh4kUTxx.js",s+"/app/immutable/chunks/index-client.j3BmQV3R.js",s+"/app/immutable/chunks/proxy.AXJ473x3.js",s+"/app/immutable/chunks/render.C7N1kH4r.js",s+"/app/immutable/chunks/runtime.CV-FRLlh.js",s+"/app/immutable/chunks/svelte-head.T12J0saJ.js",s+"/app/immutable/chunks/userState.svelte.Cesof772.js",s+"/app/immutable/entry/start.B6hDQLcA.js"],m=[s+"/fonts/cascadia-code/Cascadia.ttf",s+"/fonts/cascadia-code/SIL Open Font License.txt",s+"/fonts/selawik/selawk.ttf",s+"/fonts/selawik/selawkb.ttf",s+"/fonts/selawik/selawkl.ttf",s+"/fonts/selawik/selawksb.ttf",s+"/fonts/selawik/selawksl.ttf",s+"/fonts/selawik/SIL Open Font License.txt",s+"/images/favicon_512.png",s+"/manifest.json"],u="1723494605549",c=`cache-${u}`,p=[...o,...m];self.addEventListener("install",e=>{async function n(){await(await caches.open(c)).addAll(p)}e.waitUntil(n())});self.addEventListener("activate",e=>{async function n(){for(const t of await caches.keys())t!==c&&await caches.delete(t)}e.waitUntil(n())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function n(){const t=new URL(e.request.url),i=await caches.open(c);if(p.includes(t.pathname)){const a=await i.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&i.put(e.request,a.clone()),a}catch(a){const l=await i.match(e.request);if(l)return l;throw a}}e.respondWith(n())});
