const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/app/immutable/entry/app.RLjQDCfY.js",s+"/app/immutable/nodes/0.tTW-N8r8.js",s+"/app/immutable/assets/0.ChxKW_6K.css",s+"/app/immutable/nodes/1.DhQpA0fX.js",s+"/app/immutable/nodes/2.CAH-U0l-.js",s+"/app/immutable/nodes/3.CMrl4l-G.js",s+"/app/immutable/assets/3.In_wLK-h.css",s+"/app/immutable/nodes/4.Bry2Yrqh.js",s+"/app/immutable/assets/4.BpwHfDRr.css",s+"/app/immutable/nodes/5.Cmq1Arkt.js",s+"/app/immutable/assets/5.CDcb2BMP.css",s+"/app/immutable/nodes/6.B7uKOYa-.js",s+"/app/immutable/assets/6.B46YmKAW.css",s+"/app/immutable/assets/Folder.Bv4fsemN.css",s+"/app/immutable/chunks/Folder.CNKdguSv.js",s+"/app/immutable/assets/Icon.5_9I9Kmg.css",s+"/app/immutable/chunks/Icon.DylpRlJe.js",s+"/app/immutable/assets/ProgressBar.CvJdmZFX.css",s+"/app/immutable/chunks/ProgressBar.Lpg5QfvB.js",s+"/app/immutable/assets/TextInput.Dk94skq7.css",s+"/app/immutable/chunks/TextInput.BryWsCEc.js",s+"/app/immutable/chunks/app.svelte.omhvH3X-.js",s+"/app/immutable/chunks/attributes.N1z6uQRr.js",s+"/app/immutable/chunks/directories.svelte.Cil8smhP.js",s+"/app/immutable/chunks/disclose-version.BRFWJlgu.js",s+"/app/immutable/chunks/entry.t6y0RqSM.js",s+"/app/immutable/chunks/events.-h2mbIF3.js",s+"/app/immutable/chunks/firebase.svelte.DK2MtVdp.js",s+"/app/immutable/chunks/if.DxqyGXBG.js",s+"/app/immutable/chunks/index-client.C7fSNI2Y.js",s+"/app/immutable/chunks/input.BrJUw80A.js",s+"/app/immutable/chunks/pages.svelte.BplmUK_0.js",s+"/app/immutable/chunks/paths.CRSbkVVD.js",s+"/app/immutable/chunks/render.DNGc7hJe.js",s+"/app/immutable/chunks/runtime.De9YyAkO.js",s+"/app/immutable/chunks/snippet.GcCkzcbJ.js",s+"/app/immutable/chunks/svelte-head.Cdnu2LVH.js",s+"/app/immutable/chunks/this.DZmpvC0T.js",s+"/app/immutable/entry/start.BUtNpF-3.js"],u=[s+"/fonts/cascadia-code/Cascadia.ttf",s+"/fonts/cascadia-code/SIL Open Font License.txt",s+"/fonts/selawik/selawk.ttf",s+"/fonts/selawik/selawkb.ttf",s+"/fonts/selawik/selawkl.ttf",s+"/fonts/selawik/selawksb.ttf",s+"/fonts/selawik/selawksl.ttf",s+"/fonts/selawik/SIL Open Font License.txt",s+"/images/favicon.svg",s+"/images/favicon_512.png",s+"/images/icons/double-checkmark.svg",s+"/images/icons/gear.svg",s+"/images/icons/home.svg",s+"/images/icons/logout.svg",s+"/images/icons/plus.svg",s+"/images/icons/triangle-left.svg",s+"/images/icons/triangle-right.svg",s+"/images/icons/xmark-small.svg",s+"/manifest.json"],o="1725465384510",p=`cache-${o}`,m=[...l,...u];self.addEventListener("install",e=>{async function i(){await(await caches.open(p)).addAll(m)}e.waitUntil(i())});self.addEventListener("activate",e=>{async function i(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}e.waitUntil(i())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function i(){const t=new URL(e.request.url),n=await caches.open(p);if(m.includes(t.pathname)){const a=await n.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&n.put(e.request,a.clone()),a}catch(a){const c=await n.match(e.request);if(c)return c;throw a}}e.respondWith(i())});
