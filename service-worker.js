const s=location.pathname.split("/").slice(0,-1).join("/"),l=[s+"/app/immutable/entry/app.B0AeTcIT.js",s+"/app/immutable/nodes/0.DG3TbsJt.js",s+"/app/immutable/assets/0.BHbsLKE0.css",s+"/app/immutable/nodes/1.Dho_nlwB.js",s+"/app/immutable/nodes/2.NRM9IKRw.js",s+"/app/immutable/nodes/3.zEpdsfrS.js",s+"/app/immutable/assets/3.ZfI8qqtn.css",s+"/app/immutable/nodes/4.Bo24wofj.js",s+"/app/immutable/assets/4.BpwHfDRr.css",s+"/app/immutable/nodes/5.N9NoMird.js",s+"/app/immutable/nodes/6.BmvBpAym.js",s+"/app/immutable/assets/6.BbB9kVr0.css",s+"/app/immutable/assets/ProgressBar.CvJdmZFX.css",s+"/app/immutable/chunks/ProgressBar.CpJ_eYG6.js",s+"/app/immutable/chunks/attributes.CM7B3mdt.js",s+"/app/immutable/chunks/authUtils.DwhJWTbG.js",s+"/app/immutable/chunks/core.CG__ofcG.js",s+"/app/immutable/chunks/disclose-version.CTURzmtL.js",s+"/app/immutable/chunks/entry.CakyYFX8.js",s+"/app/immutable/chunks/events.BUMyFP41.js",s+"/app/immutable/chunks/firebase.client.bXpNPLp1.js",s+"/app/immutable/chunks/firebaseState.svelte.D5C0RHyf.js",s+"/app/immutable/chunks/if.CiaBrdUu.js",s+"/app/immutable/chunks/index-client.C1LdGHdX.js",s+"/app/immutable/chunks/input.Dd9l6VPK.js",s+"/app/immutable/chunks/pagesState.svelte.BgdIMNhs.js",s+"/app/immutable/chunks/preload-helper.BA4J2c_Q.js",s+"/app/immutable/chunks/proxy.DEl-fzJA.js",s+"/app/immutable/chunks/render.BeBBQ2z7.js",s+"/app/immutable/chunks/runtime.D4DqS6tz.js",s+"/app/immutable/chunks/snippet.DUyGV7gm.js",s+"/app/immutable/chunks/svelte-head.7Gnwh8wH.js",s+"/app/immutable/entry/start.Dj7L-wDy.js",s+"/app/immutable/chunks/quill.Bk4jDS0q.js"],u=[s+"/fonts/cascadia-code/Cascadia.ttf",s+"/fonts/cascadia-code/SIL Open Font License.txt",s+"/fonts/selawik/selawk.ttf",s+"/fonts/selawik/selawkb.ttf",s+"/fonts/selawik/selawkl.ttf",s+"/fonts/selawik/selawksb.ttf",s+"/fonts/selawik/selawksl.ttf",s+"/fonts/selawik/SIL Open Font License.txt",s+"/images/favicon.svg",s+"/images/favicon_512.png",s+"/images/icons/double-checkmark.svg",s+"/manifest.json"],o="1724271325036",p=`cache-${o}`,m=[...l,...u];self.addEventListener("install",e=>{async function n(){await(await caches.open(p)).addAll(m)}e.waitUntil(n())});self.addEventListener("activate",e=>{async function n(){for(const t of await caches.keys())t!==p&&await caches.delete(t)}e.waitUntil(n())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function n(){const t=new URL(e.request.url),i=await caches.open(p);if(m.includes(t.pathname)){const a=await i.match(t.pathname);if(a)return a}try{const a=await fetch(e.request);if(!(a instanceof Response))throw new Error("invalid response from fetch");return a.status===200&&i.put(e.request,a.clone()),a}catch(a){const c=await i.match(e.request);if(c)return c;throw a}}e.respondWith(n())});
